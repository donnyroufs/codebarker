interface IMailer<T extends Record<string, unknown>> {
  send(to: string, from: string, content: T): Promise<EmailResult>
}

export class EmailService {
  private readonly _myMailer: IMailer<ReminderContent>

  public constructor(myMailer: IMailer<ReminderContent>){
    this._myMailer = myMailer
  }

  public async sendReminder(
    to: string,
    from: string,
    reminderInfo: string,
    eventType: string,
    createdAt: Date
  ): Promise<string| null> {
    try {
      const result = await this._myMailer.send(to, from, {
        reminderInfo, 
        eventType,
        createdAt
      })

      return result.id
    } catch(e) {
      return null
    }
  }
}